{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst input = document.querySelector('#datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDates[0];\n      console.log(selectedDates[0]);\n\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(input, options);\n\nstartBtn.addEventListener('click', handleClick);\n\nfunction handleClick(event) {\n  event.target.disabled = true;\n  input.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = Date.now();\n    const diff = userSelectedDate - now;\n    if (diff <= 0) {\n      clearInterval(timerId);\n      updateTimer(0);\n      input.disabled = false;\n      return;\n    }\n\n    updateTimer(diff);\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  daysEl.textContent = String(days).padStart(2, '0');\n  hoursEl.textContent = String(hours).padStart(2, '0');\n  minutesEl.textContent = String(minutes).padStart(2, '0');\n  secondsEl.textContent = String(seconds).padStart(2, '0');\n}\n"],"names":["startBtn","input","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerId","options","selectedDates","iziToast","flatpickr","handleClick","event","now","diff","updateTimer","convertMs","ms","days","hours","minutes","seconds"],"mappings":"2FAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAU,KAEdP,EAAS,SAAW,GAEpB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,GAAK,IAAI,MAC1BC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDV,EAAS,SAAW,KAEpBM,EAAmBG,EAAc,CAAC,EAClC,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAE5BT,EAAS,SAAW,GAEvB,CACH,EAEAW,EAAUV,EAAOO,CAAO,EAExBR,EAAS,iBAAiB,QAASY,CAAW,EAE9C,SAASA,EAAYC,EAAO,CAC1BA,EAAM,OAAO,SAAW,GACxBZ,EAAM,SAAW,GAEjBM,EAAU,YAAY,IAAM,CAC1B,MAAMO,EAAM,KAAK,MACXC,EAAOT,EAAmBQ,EAChC,GAAIC,GAAQ,EAAG,CACb,cAAcR,CAAO,EACrBS,EAAY,CAAC,EACbf,EAAM,SAAW,GACjB,MACD,CAEDe,EAAYD,CAAI,CACjB,EAAE,GAAI,CACT,CAEA,SAASE,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASN,EAAYE,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUC,CAAE,EACtDhB,EAAO,YAAc,OAAOiB,CAAI,EAAE,SAAS,EAAG,GAAG,EACjDhB,EAAQ,YAAc,OAAOiB,CAAK,EAAE,SAAS,EAAG,GAAG,EACnDhB,EAAU,YAAc,OAAOiB,CAAO,EAAE,SAAS,EAAG,GAAG,EACvDhB,EAAU,YAAc,OAAOiB,CAAO,EAAE,SAAS,EAAG,GAAG,CACzD"}